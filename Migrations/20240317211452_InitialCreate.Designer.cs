// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoListKeevo.Data;

#nullable disable

namespace ToDoListKeevo.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240317211452_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToDoListKeevo.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Prazo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tarefas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Estudar C#",
                            Prazo = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 1,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Estudar PHP",
                            Prazo = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 2,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Estudar Angular",
                            Prazo = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 2,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Comprar leite",
                            Prazo = new DateTime(2024, 3, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 2,
                            Tipo = 3
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Limpar a casa",
                            Prazo = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 2,
                            Tipo = 4
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Cinema com amigos",
                            Prazo = new DateTime(2024, 4, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 1,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Consertar o teclado",
                            Prazo = new DateTime(2024, 3, 19, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 0,
                            Tipo = 4
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Subir para o docker",
                            Prazo = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 2,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Fazer o almoço",
                            Prazo = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 2,
                            Tipo = 4
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Aula quinta a noite",
                            Prazo = new DateTime(2024, 3, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 0,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Trocar a lente",
                            Prazo = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 2,
                            Tipo = 4
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Comprar farinha",
                            Prazo = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Status = 2,
                            Tipo = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
